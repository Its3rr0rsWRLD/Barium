plugins {
    id 'java'
}

group = 'org.its3rr0rswrld'
version = '1.0.2.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

jar {
    destinationDirectory = file("build/libs/plugins")
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

task runSpigot(type: Exec, dependsOn: 'build') {
    workingDir = file('build/libs') // Sets the working directory to 'build/libs'
    doFirst {
        // Logging the directory being checked
        println "Checking directory: ${file('plugins').absolutePath}"

        // Finds and deletes any JAR files starting with 'Barium' in the plugins directory
        def jars = file('plugins').listFiles().findAll {
            it.name.startsWith('Barium') && it.name.endsWith('.jar')
        }
        println "Deleting JAR files: ${jars*.name}"
        jars.each { it.delete() }

        // Checks and deletes the directory named 'Barium'
        def bariumDir = file('build/libs/plugins/Barium')
        if (bariumDir.exists()) {
            println "Deleting directory: ${bariumDir.absolutePath}"
            delete bariumDir
        } else {
            println "Directory not found: ${bariumDir.absolutePath}"
        }
    }

    // Defines the command to launch Spigot with specified memory limits and without the GUI
    commandLine 'java', '-Xms400M', '-Xmx600M', '-jar', 'spigot-1.20.4.jar' //, '-nogui'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
